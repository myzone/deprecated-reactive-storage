(1)
Всем привет, меня зовут Славик Гольденштейн, последние 2 года я занимаюсь разработкой на джава.
Сегодня я постараюсь вам рассказать про такую классную штуку как реактивное программрование.

Но сначала я хочу немного поговорить о разчиных подходах к программированию.
Кто нибудь слышал об ООП?
ООП - это такой, подход который основавается на аксиоме, что все в нашем мире является объектом


Хорошо, а кто использует ООП?
А кто слышал про ФП?
А кто использует ФП?

(2)
Многие считают, что Фунциональный подход несовместим с ООП и наоборот.
(3)
Однако на мой взгляд это совсем нет так, более того эти подходы могут дополнять друг-друга образуя некий симбиоз.

(слайд с картинкой аццкого гуя)
Теперь я хочу поговорить об интеравных приложениях, под интерактивностью я подразумемаю наличие графического интерфейса пользователя, который реагирует на действия последнего.
(слайд с UML диаграмами обревнра)
Как правило, в основу таких приложений ложится событийно-ориентированная модель. Примерами такой модели являются паттерны обсервер и паблишер-сабскрайбер.
Посмотрите какие красивые диаграммы, все просто и красиво, не так ли?

Но что происходит в реалиных работающих приложениях? (4)
У такого подхода кроме приемуществ есть и недостати: (5)
- на самом деле слушателей много, очень много
- их приходится постоянно добавлять и удалять, еще не стоит забывать про правильный порядок, который нужно постонно контролировать
- как по мне, читать такой код тоже далеко не в кайф
- да еще и утечки памяти, которые происходит из-за создания слушателями неявных ссылок, это хоть и решаемая проблема, но почему-то я постоянно только и видел код ей обладающий

И иногда это приводит неприятным последствиям: (6)

И как вы думаете, есть какой-то способ выжить? Правильно, реактивное программирование.
Реактивное программирование - это подход, который подразумевает манимуляции не с переменными, а потоками данных.
Для простоты давайте рассмотрим следующий код:
(слайд с кодом)









